// Code generated by MockGen. DO NOT EDIT.
// Source: util/print.go

// Package util is a generated GoMock package.
package util

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPrinterInterface is a mock of PrinterInterface interface
type MockPrinterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPrinterInterfaceMockRecorder
}

// MockPrinterInterfaceMockRecorder is the mock recorder for MockPrinterInterface
type MockPrinterInterfaceMockRecorder struct {
	mock *MockPrinterInterface
}

// NewMockPrinterInterface creates a new mock instance
func NewMockPrinterInterface(ctrl *gomock.Controller) *MockPrinterInterface {
	mock := &MockPrinterInterface{ctrl: ctrl}
	mock.recorder = &MockPrinterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrinterInterface) EXPECT() *MockPrinterInterfaceMockRecorder {
	return m.recorder
}

// PrintWithColumns mocks base method
func (m *MockPrinterInterface) PrintWithColumns(arg0 [][]string, arg1 []string) {
	m.ctrl.Call(m, "PrintWithColumns", arg0, arg1)
}

// PrintWithColumns indicates an expected call of PrintWithColumns
func (mr *MockPrinterInterfaceMockRecorder) PrintWithColumns(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrintWithColumns", reflect.TypeOf((*MockPrinterInterface)(nil).PrintWithColumns), arg0, arg1)
}
